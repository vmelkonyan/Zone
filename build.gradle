plugins {
	id "java"
	id "idea"
	id "jacoco"
	id "org.springframework.boot" version "2.7.3" apply false
	id "io.spring.dependency-management" version "1.0.11.RELEASE" apply false
}

ext {
	platformGroup = "com.codulate"
	platformVersion = "0.0.1"
	mapStructVersion = "1.5.2.Final"
	springdocVersion = "1.6.4"
}

repositories {
	gradlePluginPortal()
	mavenCentral()
	maven {
		url "https://plugins.gradle.org/m2/"
	}
}

group = platformGroup
version = platformVersion

subprojects {
	apply plugin: "java-library"
	apply plugin: "io.spring.dependency-management"
	apply plugin: "jacoco"

	group = platformGroup
	version = platformVersion
	sourceCompatibility = JavaVersion.VERSION_17

	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}

	jacoco {
		toolVersion = "0.8.7"
	}

	jacocoTestReport {
		reports {
			html.enabled true
			xml.enabled true
		}
	}

	dependencyManagement {
		imports {
			mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
		}
		dependencies {
			dependency("org.mapstruct:mapstruct:${mapStructVersion}")
			dependency("org.mapstruct:mapstruct-processor:${mapStructVersion}")
			dependency("org.springdoc:springdoc-openapi-ui:$springdocVersion")
		}
	}

	dependencies {
		compileOnly "org.projectlombok:lombok"
		annotationProcessor "org.projectlombok:lombok"
		annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

		implementation "org.mapstruct:mapstruct"
		annotationProcessor "org.mapstruct:mapstruct-processor"

		implementation "com.h2database:h2"

		testImplementation "org.mockito:mockito-junit-jupiter"
		testImplementation "org.springframework.boot:spring-boot-starter-test"
	}
}

project(":domain") {
	dependencies {
		implementation "org.springframework:spring-context"

		implementation "javax.validation:validation-api"
		testImplementation "org.springframework.boot:spring-boot-starter-test"

		runtimeOnly project(':infrastructure')
		runtimeOnly project(':messaging')

	}
}
project(":infrastructure") {
	dependencies {
		runtimeOnly 'com.h2database:h2'
		implementation "org.springframework.boot:spring-boot-starter-data-jpa"
		implementation "javax.validation:validation-api"

		implementation project(":domain")
		implementation project(":common")

	}
}
project(":app") {
	dependencies {

		implementation "org.springframework.boot:spring-boot-starter-web"
		implementation "javax.validation:validation-api"
		implementation 'org.springframework.boot:spring-boot-starter-validation'

		implementation project(":domain")
		implementation project(":common")

	}
}

project(":messaging") {
	dependencies {
		implementation 'org.springframework:spring-context'
		implementation 'org.springframework.boot:spring-boot-starter-activemq'
		implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

		implementation project(":domain")
	}
}
project(":common") {
	dependencies {

	}
}

project(":launcher") {
	apply plugin: "org.springframework.boot"

	dependencies {
		implementation "org.springframework.boot:spring-boot-starter-actuator"
		implementation "org.springdoc:springdoc-openapi-ui"

		implementation project(":app")

	}

	bootJar {
		mainClass = 'com.codulate.zone.App'
		manifest {
			attributes 'Implementation-Version': archiveVersion
		}
	}

	bootRun {
		jvmArgs('-Dspring.output.ansi.enabled=always')
		systemProperties System.properties
	}

	jar {
		enabled = false
	}

	test {
		useJUnitPlatform()
		testLogging {
			events "passed", "skipped", "failed"
		}
	}
}